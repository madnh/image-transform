{
  "$schema": "http://json-schema.org/draft-07/schema#",
  "title": "Image Transform Config Schema",
  "description": "Image Transform Config Schema",
  "$ref": "#/definitions/TransformConfig",
  "definitions": {
    "TransformConfig": {
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "$schema": {
          "type": "string",
          "description": "Schema version",
          "example": "http://json-schema.org/draft-07/schema#"
        },
        "version": {
          "type": "number",
          "format": "integer",
          "description": "Version of the transform config schema"
        },
        "profiles": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/TransformProfile"
          },
          "description": "Array of transform profiles"
        }
      },
      "required": ["version", "profiles"]
    },
    "TransformProfile": {
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "name": {
          "type": "string",
          "description": "Name of the transform profile"
        },
        "description": {
          "type": "string",
          "description": "Description of the transform profile"
        },
        "source": {
          "oneOf": [
            {
              "type": "string",
              "description": "Source image"
            },
            {
              "type": "array",
              "items": {
                "type": "string"
              },
              "description": "Array of source images"
            }
          ],
          "description": "Source image"
        },
        "transforms": {
          "oneOf": [
            {
              "$ref": "#/definitions/TransformAction"
            },
            {
              "type": "array",
              "items": {
                "$ref": "#/definitions/TransformAction"
              },
              "description": "Array of transforms"
            }
          ]
        },
        "export": {
          "type": "object",
          "description": "Export options, if not specified, no files will be exported",
          "properties": {
            "jpeg": {
              "oneOf": [
                {
                  "type": "boolean",
                  "description": "Export as JPEG with default options"
                },
                {
                  "$ref": "#/definitions/TransformExportJpeg"
                }
              ]
            },
            "png": {
              "oneOf": [
                {
                  "type": "boolean",
                  "description": "Export as PNG with default options"
                },
                {
                  "$ref": "#/definitions/TransformExportPng"
                }
              ]
            },
            "webp": {
              "oneOf": [
                {
                  "type": "boolean",
                  "description": "Export as WebP with default options"
                },
                {
                  "$ref": "#/definitions/TransformExportWebp"
                }
              ]
            },
            "avif": {
              "oneOf": [
                {
                  "type": "boolean",
                  "description": "Export as AVIF with default options"
                },
                {
                  "$ref": "#/definitions/TransformExportAvif"
                }
              ]
            }
          }
        },
        "output": {
          "type": "object",
          "description": "Output options",
          "properties": {
            "fileNameFormat": {
              "type": "string",
              "description": "Format of export file name",
              "example": "{name}@2x.{ext}"
            },
            "fileNameReplace": {
              "type": "object",
              "description": "Replace parts of the file name",
              "additionalProperties": {
                "type": "string"
              },
              "example": {
                "__raw": "",
                "@2x": ""
              }
            }
          }
        }
      },
      "required": ["name", "export"]
    },
    "TransformAction": {
      "additionalProperties": false,
      "properties": {
        "label": {
          "type": "string",
          "description": "Label of the transform action, can be used to add to output filename"
        },
        "keepMeta": {
          "type": "boolean"
        },
        "resize": {
          "$ref": "#/definitions/ResizeActionOptions"
        },
        "rotate": {
          "$ref": "#/definitions/RorateActionOptions"
        }
      },
      "type": "object"
    },
    "ResizeActionOptions": {
      "properties": {
        "background": {
          "$ref": "#/definitions/sharp.Color",
          "description": "Background colour when using a fit of contain, parsed by the color module, defaults to black without transparency. (optional, default {r:0,g:0,b:0,alpha:1})"
        },
        "fastShrinkOnLoad": {
          "description": "Take greater advantage of the JPEG and WebP shrink-on-load feature, which can lead to a slight moirÃ© pattern on some images. (optional, default true)",
          "type": "boolean"
        },
        "fit": {
          "description": "How the image should be resized to fit both provided dimensions, one of cover, contain, fill, inside or outside. (optional, default 'cover')",
          "enum": ["contain", "cover", "fill", "inside", "outside"],
          "type": "string"
        },
        "height": {
          "description": "Alternative means of specifying height. If both are present this takes priority.",
          "type": "number"
        },
        "kernel": {
          "description": "The kernel to use for image reduction. (optional, default 'lanczos3')",
          "enum": ["nearest", "cubic", "mitchell", "lanczos2", "lanczos3"],
          "type": "string"
        },
        "position": {
          "description": "Position, gravity or strategy to use when fit is cover or contain. (optional, default 'centre')",
          "type": ["number", "string"]
        },
        "width": {
          "description": "Alternative means of specifying width. If both are present this takes priority.",
          "type": "number"
        },
        "withoutEnlargement": {
          "description": "Do not enlarge if the width or height are already less than the specified dimensions, equivalent to GraphicsMagick's > geometry option. (optional, default false)",
          "type": "boolean"
        },
        "withoutReduction": {
          "description": "Do not reduce if the width or height are already greater than the specified dimensions, equivalent to GraphicsMagick's < geometry option. (optional, default false)",
          "type": "boolean"
        }
      },
      "type": "object"
    },
    "RorateActionOptions": {
      "properties": {
        "angle": {
          "type": "number"
        },
        "options": {
          "$ref": "#/definitions/sharp.RotateOptions"
        }
      },
      "required": ["angle"],
      "type": "object"
    },

    "TransformExportJpeg": {
      "type": "object",
      "properties": {
        "adaptiveFiltering": {
          "description": "Use adaptive row filtering (optional, default false)",
          "type": "boolean"
        },
        "colors": {
          "description": "Alternative Spelling of \"colours\". Maximum number of palette entries (optional, default 256)",
          "type": "number"
        },
        "colours": {
          "description": "Maximum number of palette entries (optional, default 256)",
          "type": "number"
        },
        "compressionLevel": {
          "description": "zlib compression level, 0-9 (optional, default 6)",
          "type": "number"
        },
        "dither": {
          "description": "Level of Floyd-Steinberg error diffusion (optional, default 1.0)",
          "type": "number"
        },
        "effort": {
          "description": "Level of CPU effort to reduce file size, between 1 (fastest) and 10 (slowest), sets palette to true (optional, default 7)",
          "type": "number"
        },
        "force": {
          "description": "Force format output, otherwise attempt to use input format (optional, default true)",
          "type": "boolean"
        },
        "palette": {
          "description": "Quantise to a palette-based image with alpha transparency support (optional, default false)",
          "type": "boolean"
        },
        "progressive": {
          "description": "Use progressive (interlace) scan (optional, default false)",
          "type": "boolean"
        },
        "quality": {
          "description": "Use the lowest number of colours needed to achieve given quality (optional, default `100`)",
          "type": "number"
        }
      }
    },
    "TransformExportPng": {
      "type": "object",
      "properties": {
        "adaptiveFiltering": {
          "description": "Use adaptive row filtering (optional, default false)",
          "type": "boolean"
        },
        "colors": {
          "description": "Alternative Spelling of \"colours\". Maximum number of palette entries (optional, default 256)",
          "type": "number"
        },
        "colours": {
          "description": "Maximum number of palette entries (optional, default 256)",
          "type": "number"
        },
        "compressionLevel": {
          "description": "zlib compression level, 0-9 (optional, default 6)",
          "type": "number"
        },
        "dither": {
          "description": "Level of Floyd-Steinberg error diffusion (optional, default 1.0)",
          "type": "number"
        },
        "effort": {
          "description": "Level of CPU effort to reduce file size, between 1 (fastest) and 10 (slowest), sets palette to true (optional, default 7)",
          "type": "number"
        },
        "force": {
          "description": "Force format output, otherwise attempt to use input format (optional, default true)",
          "type": "boolean"
        },
        "palette": {
          "description": "Quantise to a palette-based image with alpha transparency support (optional, default false)",
          "type": "boolean"
        },
        "progressive": {
          "description": "Use progressive (interlace) scan (optional, default false)",
          "type": "boolean"
        },
        "quality": {
          "description": "Use the lowest number of colours needed to achieve given quality (optional, default `100`)",
          "type": "number"
        }
      }
    },
    "TransformExportWebp": {
      "type": "object",
      "properties": {
        "alphaQuality": {
          "description": "Quality of alpha layer, number from 0-100 (optional, default 100)",
          "type": "number"
        },
        "delay": {
          "anyOf": [
            {
              "type": "number"
            },
            {
              "items": {
                "type": "number"
              },
              "type": "array"
            }
          ],
          "description": "delay(s) between animation frames (in milliseconds), each value between 0 and 65535. (optional)"
        },
        "effort": {
          "description": "Level of CPU effort to reduce file size, integer 0-6 (optional, default 4)",
          "type": "number"
        },
        "force": {
          "description": "Force format output, otherwise attempt to use input format (optional, default true)",
          "type": "boolean"
        },
        "loop": {
          "description": "Number of animation iterations, a value between 0 and 65535. Use 0 for infinite animation. (optional, default 0)",
          "type": "number"
        },
        "lossless": {
          "description": "Use lossless compression mode (optional, default false)",
          "type": "boolean"
        },
        "minSize": {
          "description": "Prevent use of animation key frames to minimise file size (slow) (optional, default false)",
          "type": "number"
        },
        "mixed": {
          "description": "Allow mixture of lossy and lossless animation frames (slow) (optional, default false)",
          "type": "boolean"
        },
        "nearLossless": {
          "description": "Use near_lossless compression mode (optional, default false)",
          "type": "boolean"
        },
        "quality": {
          "description": "Quality, integer 1-100 (optional, default 80)",
          "type": "number"
        },
        "smartSubsample": {
          "description": "Use high quality chroma subsampling (optional, default false)",
          "type": "boolean"
        }
      }
    },
    "TransformExportAvif": {
      "type": "object",
      "properties": {
        "chromaSubsampling": {
          "description": "set to '4:2:0' to use chroma subsampling, requires libvips v8.11.0 (optional, default '4:4:4')",
          "type": "string"
        },
        "effort": {
          "description": "Level of CPU effort to reduce file size, between 0 (fastest) and 9 (slowest) (optional, default 4)",
          "type": "number"
        },
        "force": {
          "description": "Force format output, otherwise attempt to use input format (optional, default true)",
          "type": "boolean"
        },
        "lossless": {
          "description": "use lossless compression (optional, default false)",
          "type": "boolean"
        },
        "quality": {
          "description": "quality, integer 1-100 (optional, default 50)",
          "type": "number"
        }
      }
    },

    "sharp.Color": {
      "anyOf": [
        {
          "type": "string"
        },
        {
          "$ref": "#/definitions/sharp.RGBA"
        }
      ]
    },
    "sharp.RGBA": {
      "properties": {
        "alpha": {
          "type": "number"
        },
        "b": {
          "type": "number"
        },
        "g": {
          "type": "number"
        },
        "r": {
          "type": "number"
        }
      },
      "type": "object"
    },
    "sharp.RotateOptions": {
      "properties": {
        "background": {
          "$ref": "#/definitions/sharp.Color",
          "description": "parsed by the color module to extract values for red, green, blue and alpha. (optional, default \"#000000\")"
        }
      },
      "type": "object"
    }
  }
}
